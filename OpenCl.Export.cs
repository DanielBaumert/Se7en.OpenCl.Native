using System;
using System.Collections.Generic;
using System.Text;

namespace Se7en.OpenCl.Native
{
	public unsafe static partial class NativeCl
	{
		public static IntPtr clBuildProgram = new IntPtr(0x740);
		public static IntPtr clCloneKernel = new IntPtr(0x760);
		public static IntPtr clCompileProgram = new IntPtr(0x780);
		public static IntPtr clCreateBuffer = new IntPtr(0x7a0);
		public static IntPtr clCreateCommandQueue = new IntPtr(0x7d0);
		public static IntPtr clCreateCommandQueueWithProperties = new IntPtr(0x7f0);
		public static IntPtr clCreateContext = new IntPtr(0x810);
		public static IntPtr clCreateContextFromType = new IntPtr(0x8b0);
		public static IntPtr clCreateFromGLBuffer = new IntPtr(0xae0);
		public static IntPtr clCreateFromGLRenderbuffer = new IntPtr(0xb00);
		public static IntPtr clCreateFromGLTexture = new IntPtr(0xb20);
		public static IntPtr clCreateFromGLTexture2D = new IntPtr(0xb50);
		public static IntPtr clCreateFromGLTexture3D = new IntPtr(0xb80);
		public static IntPtr clCreateImage = new IntPtr(0xbb0);
		public static IntPtr clCreateImage2D = new IntPtr(0xbe0);
		public static IntPtr clCreateImage3D = new IntPtr(0xc10);
		public static IntPtr clCreateKernel = new IntPtr(0xc40);
		public static IntPtr clCreateKernelsInProgram = new IntPtr(0xc60);
		public static IntPtr clCreatePipe = new IntPtr(0xc80);
		public static IntPtr clCreateProgramWithBinary = new IntPtr(0xcb0);
		public static IntPtr clCreateProgramWithBuiltInKernels = new IntPtr(0xce0);
		public static IntPtr clCreateProgramWithIL = new IntPtr(0xd10);
		public static IntPtr clCreateProgramWithSource = new IntPtr(0xd30);
		public static IntPtr clCreateSampler = new IntPtr(0xd60);
		public static IntPtr clCreateSamplerWithProperties = new IntPtr(0xd90);
		public static IntPtr clCreateSubBuffer = new IntPtr(0xdb0);
		public static IntPtr clCreateSubDevices = new IntPtr(0xde0);
		public static IntPtr clCreateUserEvent = new IntPtr(0xe20);
		public static IntPtr clEnqueueAcquireGLObjects = new IntPtr(0xec0);
		public static IntPtr clEnqueueBarrier = new IntPtr(0xee0);
		public static IntPtr clEnqueueBarrierWithWaitList = new IntPtr(0xf00);
		public static IntPtr clEnqueueCopyBuffer = new IntPtr(0xf20);
		public static IntPtr clEnqueueCopyBufferRect = new IntPtr(0xf40);
		public static IntPtr clEnqueueCopyBufferToImage = new IntPtr(0xf60);
		public static IntPtr clEnqueueCopyImage = new IntPtr(0xf80);
		public static IntPtr clEnqueueCopyImageToBuffer = new IntPtr(0xfa0);
		public static IntPtr clEnqueueFillBuffer = new IntPtr(0xfc0);
		public static IntPtr clEnqueueFillImage = new IntPtr(0xfe0);
		public static IntPtr clEnqueueMapBuffer = new IntPtr(0x1000);
		public static IntPtr clEnqueueMapImage = new IntPtr(0x1030);
		public static IntPtr clEnqueueMarker = new IntPtr(0x1060);
		public static IntPtr clEnqueueMarkerWithWaitList = new IntPtr(0x1080);
		public static IntPtr clEnqueueMigrateMemObjects = new IntPtr(0x10a0);
		public static IntPtr clEnqueueNativeKernel = new IntPtr(0x10e0);
		public static IntPtr clEnqueueNDRangeKernel = new IntPtr(0x10c0);
		public static IntPtr clEnqueueReadBuffer = new IntPtr(0x1100);
		public static IntPtr clEnqueueReadBufferRect = new IntPtr(0x1120);
		public static IntPtr clEnqueueReadImage = new IntPtr(0x1140);
		public static IntPtr clEnqueueReleaseGLObjects = new IntPtr(0x11e0);
		public static IntPtr clEnqueueSVMFree = new IntPtr(0x1200);
		public static IntPtr clEnqueueSVMMap = new IntPtr(0x1220);
		public static IntPtr clEnqueueSVMMemcpy = new IntPtr(0x1260);
		public static IntPtr clEnqueueSVMMemFill = new IntPtr(0x1240);
		public static IntPtr clEnqueueSVMMigrateMem = new IntPtr(0x1280);
		public static IntPtr clEnqueueSVMUnmap = new IntPtr(0x12a0);
		public static IntPtr clEnqueueTask = new IntPtr(0x12c0);
		public static IntPtr clEnqueueUnmapMemObject = new IntPtr(0x12e0);
		public static IntPtr clEnqueueWaitForEvents = new IntPtr(0x1300);
		public static IntPtr clEnqueueWriteBuffer = new IntPtr(0x1320);
		public static IntPtr clEnqueueWriteBufferRect = new IntPtr(0x1340);
		public static IntPtr clEnqueueWriteImage = new IntPtr(0x1360);
		public static IntPtr clFinish = new IntPtr(0x1380);
		public static IntPtr clFlush = new IntPtr(0x13a0);
		public static IntPtr clGetCommandQueueInfo = new IntPtr(0x13c0);
		public static IntPtr clGetContextInfo = new IntPtr(0x13d0);
		public static IntPtr clGetDeviceAndHostTimer = new IntPtr(0x13e0);
		public static IntPtr clGetDeviceIDs = new IntPtr(0x1400);
		public static IntPtr clGetDeviceInfo = new IntPtr(0x14d0);
		public static IntPtr clGetEventInfo = new IntPtr(0x14e0);
		public static IntPtr clGetEventProfilingInfo = new IntPtr(0x1500);
		public static IntPtr clGetExtensionFunctionAddress = new IntPtr(0x1520);
		public static IntPtr clGetExtensionFunctionAddressForPlatform = new IntPtr(0x1ae0);
		public static IntPtr clGetGLObjectInfo = new IntPtr(0x20c0);
		public static IntPtr clGetGLTextureInfo = new IntPtr(0x20e0);
		public static IntPtr clGetHostTimer = new IntPtr(0x2100);
		public static IntPtr clGetImageInfo = new IntPtr(0x2120);
		public static IntPtr clGetKernelArgInfo = new IntPtr(0x2140);
		public static IntPtr clGetKernelInfo = new IntPtr(0x2160);
		public static IntPtr clGetKernelSubGroupInfo = new IntPtr(0x2180);
		public static IntPtr clGetKernelWorkGroupInfo = new IntPtr(0x21c0);
		public static IntPtr clGetMemObjectInfo = new IntPtr(0x21e0);
		public static IntPtr clGetPipeInfo = new IntPtr(0x2200);
		public static IntPtr clGetPlatformIDs = new IntPtr(0x2220);
		public static IntPtr clGetPlatformInfo = new IntPtr(0x2300);
		public static IntPtr clGetProgramBuildInfo = new IntPtr(0x2360);
		public static IntPtr clGetProgramInfo = new IntPtr(0x2380);
		public static IntPtr clGetSamplerInfo = new IntPtr(0x23a0);
		public static IntPtr clGetSupportedImageFormats = new IntPtr(0x23c0);
		public static IntPtr clLinkProgram = new IntPtr(0x23e0);
		public static IntPtr clReleaseCommandQueue = new IntPtr(0x2410);
		public static IntPtr clReleaseContext = new IntPtr(0x2420);
		public static IntPtr clReleaseDevice = new IntPtr(0x2430);
		public static IntPtr clReleaseEvent = new IntPtr(0x2470);
		public static IntPtr clReleaseKernel = new IntPtr(0x2490);
		public static IntPtr clReleaseMemObject = new IntPtr(0x24b0);
		public static IntPtr clReleaseProgram = new IntPtr(0x24d0);
		public static IntPtr clReleaseSampler = new IntPtr(0x24f0);
		public static IntPtr clRetainCommandQueue = new IntPtr(0x2510);
		public static IntPtr clRetainContext = new IntPtr(0x2520);
		public static IntPtr clRetainDevice = new IntPtr(0x2530);
		public static IntPtr clRetainEvent = new IntPtr(0x2570);
		public static IntPtr clRetainKernel = new IntPtr(0x2590);
		public static IntPtr clRetainMemObject = new IntPtr(0x25b0);
		public static IntPtr clRetainProgram = new IntPtr(0x25d0);
		public static IntPtr clRetainSampler = new IntPtr(0x25f0);
		public static IntPtr clSetCommandQueueProperty = new IntPtr(0x2650);
		public static IntPtr clSetDefaultDeviceCommandQueue = new IntPtr(0x2660);
		public static IntPtr clSetEventCallback = new IntPtr(0x2680);
		public static IntPtr clSetKernelArg = new IntPtr(0x26a0);
		public static IntPtr clSetKernelArgSVMPointer = new IntPtr(0x26c0);
		public static IntPtr clSetKernelExecInfo = new IntPtr(0x26e0);
		public static IntPtr clSetMemObjectDestructorCallback = new IntPtr(0x2700);
		public static IntPtr clSetProgramReleaseCallback = new IntPtr(0x2720);
		public static IntPtr clSetProgramSpecializationConstant = new IntPtr(0x2740);
		public static IntPtr clSetUserEventStatus = new IntPtr(0x2760);
		public static IntPtr clSVMAlloc = new IntPtr(0x2610);
		public static IntPtr clSVMFree = new IntPtr(0x2630);
		public static IntPtr clUnloadCompiler = new IntPtr(0x2780);
		public static IntPtr clUnloadPlatformCompiler = new IntPtr(0x2790);
		public static IntPtr clWaitForEvents = new IntPtr(0x27c0);
	}
}
